{"version":3,"sources":["public_html/assets/js/node_modules/browser-pack/_prelude.js","public_html/assets/js/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","public_html/assets/js/main.js","public_html/assets/js/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","public_html/assets/js/node_modules/@babel/runtime/helpers/asyncToGenerator.js","public_html/assets/js/node_modules/@babel/runtime/helpers/interopRequireDefault.js","public_html/assets/js/node_modules/@babel/runtime/helpers/iterableToArray.js","public_html/assets/js/node_modules/@babel/runtime/helpers/nonIterableSpread.js","public_html/assets/js/node_modules/@babel/runtime/helpers/toConsumableArray.js","public_html/assets/js/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","public_html/assets/js/node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime.js","public_html/assets/js/node_modules/@babel/runtime/regenerator/index.js","public_html/assets/js/public_html/assets/js/error/invalid.js","public_html/assets/js/public_html/assets/js/functions/sql/requestServer.js","public_html/assets/js/public_html/assets/js/functions/test/test.js","public_html/assets/js/public_html/assets/js/localisation/home.js","public_html/assets/js/public_html/assets/js/logic/forms/submitAccount.js","public_html/assets/js/public_html/assets/js/logic/forms/submitLogin.js","public_html/assets/js/public_html/assets/js/main.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","arr","len","arr2","Array","2","arrayLikeToArray","isArray","./arrayLikeToArray","3","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","fn","self","this","args","arguments","apply","err","undefined","4","obj","__esModule","default","5","iter","Symbol","iterator","Object","from","6","TypeError","7","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","./arrayWithoutHoles","./iterableToArray","./nonIterableSpread","./unsupportedIterableToArray","8","minLen","prototype","toString","slice","constructor","name","test","9","runtime","Op","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","keys","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","10","regenerator-runtime","11","defineProperty","invalidInput","clearErrorNotif","throwErrorMessage","ERROR_MESSAGE","defaultFormat","password","passwordNotConfirmed","alreadyTaken","noSuchUser","message","location","textContent","style","display","input","setAttribute","nextElementSibling","previousElementSibling","color","12","_interopRequireDefault","serverPost","serverGet","_ref","_regenerator","_asyncToGenerator2","_callee","url","params","res","_context","axios","t0","console","log","_x","_x2","_x3","_ref2","_callee2","data","_context2","_x4","_x5","_x6","@babel/runtime/helpers/asyncToGenerator","@babel/runtime/helpers/interopRequireDefault","@babel/runtime/regenerator","13","TEST_LOGIN","TEST_NAME","TESTS","_home","_requestServer","REGEX","confirmPassword","document","getElementById","init","isNameAvailable","isFieldFilled","trim","isEntryValid","event","FIELDS_ENTRY","nameInMySQL","../../error/invalid.js","../../localisation/home.js","../sql/requestServer.js","14","ELEMENTS_DIVERS","BUTTONS","FORMS","nameLog","passwordLog","accountNew","accountLogin","newFormAccount","login","submitAccount","submitLog","eyeIconOpen","eyeIconClose","userNotHere","getElementsByClassName","15","_test","_invalid","inputs","initResult","initCheck","isNameTaken","anyEmptyField","map","allRespectRegex","resultRegex","inputsMatchRegex","every","../../functions/test/test.js","16","17","_ref3","_toConsumableArray2","_submitAccount","_submitLogin","arePasswordsViewed","answer","getInputPassword","disabled","field","errorMessageLocation","preventDefault","querySelectorAll","submit","_callee3","_context3","opacity","apparenceHTML","element","indice","id","window","onload","classList","add","addEventListener","target","querySelector","remove","currentTarget","getAttribute","./error/invalid.js","./functions/sql/requestServer.js","./functions/test/test.js","./localisation/home.js","./logic/forms/submitAccount.js","./logic/forms/submitLogin.js","@babel/runtime/helpers/toConsumableArray"],"mappings":"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","file":"main.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","import {\n  serverGet,\n  serverPost\n} from \"./functions/sql/requestServer.js\";\n\nimport {\n  TESTS,\n  TEST_NAME,\n  TEST_LOGIN\n} from \"./functions/test/test.js\";\n\nimport {\n  FIELDS_ENTRY,\n  FORMS,\n  BUTTONS,\n  ELEMENTS_DIVERS\n} from \"./localisation/home.js\"\n\nimport {\n  ERROR_MESSAGE,\n  throwErrorMessage,\n  clearErrorNotif,\n  invalidInput,\n} from \"./error/invalid.js\";\n\nimport {\n  accountNew\n} from \"./logic/forms/submitAccount.js\";\n\nimport {\n  accountLogin\n} from \"./logic/forms/submitLogin.js\";\n\n\n//FUNCTIONS\nlet arePasswordsViewed = (answer) => {\n  let getInputPassword = [...document.getElementsByClassName(\"password_view\")];\n  if (answer) {\n    getInputPassword.map((input) => {\n      input.setAttribute(\"type\", \"text\");\n      //I disable any further input as the type has changed. As on blur, the type will be considered as text (for the regex). I can encouter this issue by checking the name in the condition before I apply the regex match, but I want to keep it simple.\n      input.disabled = true;\n    });\n  } else {\n    getInputPassword.map((input) => {\n      input.setAttribute(\"type\", \"password\");\n      input.disabled = false;\n    });\n  }\n};\nconst isNameAvailable = async (field) => {\n  try {\n    let result = await TEST_NAME(field.value);\n    if (result) {\n      let errorMessageLocation = field.nextElementSibling;\n      field.setAttribute(\"data-state\", \"invalid\");\n      throwErrorMessage(ERROR_MESSAGE.alreadyTaken, errorMessageLocation);\n    } else {\n      field.setAttribute(\"data-state\", \"\");\n      clearErrorNotif(field);\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\nlet submitAccount = async (event) => {\n  try {\n    event.preventDefault();\n    let inputs = [...FORMS.accountNew.querySelectorAll(\"input\")];\n    inputs.pop();\n    let checksPassed = accountNew.initCheck(inputs);\n    if (checksPassed) return FORMS.accountNew.submit();\n  } catch (err) {\n    console.log(err);\n  }\n};\nconst submitLog = async (event) => {\n  try {\n    event.preventDefault();\n    let inputs = [...FORMS.accountLogin.querySelectorAll(\"input\")];\n    inputs.pop();\n    let checksPassed = accountLogin.initCheck(inputs);\n    if (!checksPassed) return (ELEMENTS_DIVERS.userNotHere.style.opacity = 1);\n    let data = {\n      name: inputs[0].value,\n      password: inputs[1].value,\n    };\n    let ifUserExists = await serverPost(\"/checkUser\", \"post\", data);\n    if (!ifUserExists) return (ELEMENTS_DIVERS.userNotHere.style.opacity = 1);\n    FORMS.accountLogin.submit();\n  } catch (err) {\n    console.log(err);\n  }\n};\nconst apparenceHTML = {\n  doWeHighLightLabel: (element, indice) => {\n    element.previousElementSibling.style.color = indice ? \"white\" : \"#c7c8c7\";\n  },\n  eyesSwitch: (id) => {\n    if (id == \"eye-close\") {\n      ELEMENTS_DIVERS.eyeIconOpen.style.display = \"flex\";\n      ELEMENTS_DIVERS.eyeIconClose.style.display = \"none\";\n      arePasswordsViewed(true);\n      return;\n    } else {\n      ELEMENTS_DIVERS.eyeIconClose.style.display = \"flex\";\n      ELEMENTS_DIVERS.eyeIconOpen.style.display = \"none\";\n      arePasswordsViewed(false);\n    }\n  },\n};\n//ADD EVENTS\nconst eventEntry = () => {\n  FORMS.accountNew.addEventListener(\n    \"blur\",\n    (event) => {\n      apparenceHTML.doWeHighLightLabel(event.target, false);\n    },\n    true\n  );\n  FORMS.accountNew.addEventListener(\n    \"focus\",\n    (event) => {\n      apparenceHTML.doWeHighLightLabel(event.target, true);\n    },\n    true\n  );\n  FORMS.accountLogin.addEventListener(\n    \"focus\",\n    (event) => {\n      apparenceHTML.doWeHighLightLabel(event.target, true);\n      document.getElementsByClassName(\"error_mess\")[0].style.opacity = 0;\n      clearErrorNotif(event.target);\n    },\n    true\n  );\n  FORMS.accountLogin.addEventListener(\n    \"blur\",\n    (event) => {\n      apparenceHTML.doWeHighLightLabel(event.target, false);\n    },\n    true\n  );\n  document\n    .querySelector(\"#name\")\n    .addEventListener(\"blur\", (event) => isNameAvailable(event.target));\n};\nconst eventHTML = () => {\n  ELEMENTS_DIVERS.eyeIconClose.addEventListener(\"click\", (event) =>\n    apparenceHTML.eyesSwitch(event.currentTarget.getAttribute(\"id\"))\n  );\n  ELEMENTS_DIVERS.eyeIconOpen.addEventListener(\"click\", (event) =>\n    apparenceHTML.eyesSwitch(event.currentTarget.getAttribute(\"id\"))\n  );\n};\nconst eventButton = () => {\n  BUTTONS.newFormAccount.addEventListener(\"click\", () => {\n    FORMS.accountLogin.classList.remove(\"active2\");\n    FORMS.accountNew.classList.add(\"active1\");\n  });\n  BUTTONS.login.addEventListener(\"click\", () => {\n    FORMS.accountNew.classList.remove(\"active1\");\n    FORMS.accountLogin.classList.add(\"active2\");\n  });\n  BUTTONS.submitAccount.addEventListener(\"click\", submitAccount);\n  BUTTONS.submitLog.addEventListener(\"click\", submitLog);\n};\n//SET UP\nwindow.onload = () => {\n  let loader = document.getElementById(\"loader_content\");\n  loader.classList.add(\"loader_hide\");\n};\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  eventEntry();\n  eventButton();\n  eventHTML();\n});","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = require(\"regenerator-runtime\");\n","const ERROR_MESSAGE = {\n    defaultFormat: \"Oups, something was wrong. Try to use only characters such letters.\",\n    password: \"It must be between 8 to 45 characters including at least: one capital letter and one number.\",\n    passwordNotConfirmed: \"Oups, it seems you have not retype your password correctly.\",\n    alreadyTaken: \"The name is already taken. Please, try an other one.\",\n    noSuchUser: \"This user is not registered.\",\n};\n\n\nconst throwErrorMessage = (message, location) => {\n    location.textContent = message;\n    location.style.display = \"block\";\n\n};\nconst invalidInput = (input, type) => {\n    input.setAttribute(\"data-state\", \"invalid\");\n    switch (type) {\n        case \"text\":\n            throwErrorMessage(ERROR_MESSAGE.defaultFormat, input.nextElementSibling);\n            return;\n        case \"password\":\n            throwErrorMessage(ERROR_MESSAGE.password, input.nextElementSibling);\n            return;\n        case \"confirmPassword\":\n            throwErrorMessage(\n                ERROR_MESSAGE.passwordNotConfirmed,\n                input.nextElementSibling\n            );\n            return;\n        default:\n            return;\n    }\n};\nlet clearErrorNotif = (input) => {\n    input.previousElementSibling.style.color = \"white\";\n    input.setAttribute(\"data-state\", \"\");\n    if (input.nextElementSibling) input.nextElementSibling.textContent = \"\";\n};\n\n\nexport {\n    ERROR_MESSAGE,\n    throwErrorMessage,\n    clearErrorNotif,\n    invalidInput\n}","let serverGet = async (url, method, params) => {\n    try {\n        let res = await axios({\n            method,\n            url,\n            params,\n        });\n        return res\n    } catch (err) {\n        console.log(err);\n    }\n};\nlet serverPost = async (url, method, data) => {\n    try {\n        let res = await axios({\n            method,\n            url,\n            data,\n        });\n        console.log(res.data)\n        return res.data\n    } catch (err) {\n        console.log(err);\n    }\n};\n\n\n\nexport {\n    serverGet,\n    serverPost\n};","import {\n    ERROR_MESSAGE,\n    throwErrorMessage,\n    clearErrorNotif,\n    invalidInput\n} from \"../../error/invalid.js\"\nimport {\n    FIELDS_ENTRY\n} from \"../../localisation/home.js\"\nimport {\n    serverGet,\n    serverPost\n} from \"../sql/requestServer.js\"\n\nconst REGEX = {\n    defaultFormat: /^[a-zA-Z.-\\/@\\s]+$/,\n    password: /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])|(?=.*?[#?!@$%^&*-]).{8,45}/,\n    confirmPassword: document.getElementById(\"confirm-password\"),\n};\nconst TESTS = {\n    result: true,\n    init: () => TESTS.result = true,\n    isNameAvailable: (name) => {\n        TESTS.init();\n        TESTS.result = name.nextElementSibling\n            .textContent.length ? true : false;\n        return TESTS.result;\n    },\n    isFieldFilled: (input) => {\n        TESTS.init();\n        TESTS.result = input.trim().length ? true : false;\n        return TESTS.result\n    },\n    isEntryValid: (value, name, event) => {\n        TESTS.init();\n        switch (name) {\n            case \"name\":\n                TESTS.result = REGEX.defaultFormat.test(value);\n                return TESTS.result;\n            case \"password\":\n                TESTS.result = REGEX.password.test(value);\n                return TESTS.result;\n            case \"confirmPassword\":\n                TESTS.result = value === FIELDS_ENTRY.password.value ? true : false;\n                return TESTS.result;\n            default:\n                return TESTS.result;\n        }\n    },\n};\nconst TEST_NAME = async entry => {\n    try {\n        let result;\n        let params = {\n            name: entry\n        }\n        let nameInMySQL = await serverGet(\"/checkName\", \"get\", params);\n        result = nameInMySQL.data ? true : false;\n        return result\n\n    } catch (err) {\n        console.log(err)\n    }\n\n}\nconst TEST_LOGIN = async (name, password) => {\n    try {\n        let result;\n        let params = {\n            name,\n            password\n        }\n        let nameInMySQL = await serverGet(\"/checkAccount\", \"get\", params);\n        result = nameInMySQL.data ? true : false;\n        return result\n\n    } catch (err) {\n        console.log(err)\n    }\n\n}\nexport {\n    TESTS,\n    TEST_NAME,\n    TEST_LOGIN\n}","const FIELDS_ENTRY = {\n    name: document.getElementById(\"name\"),\n    password: document.getElementById(\"password\"),\n    confirmPassword: document.getElementById(\"confirm-password\"),\n    nameLog: document.getElementById(\"name-log\"),\n    passwordLog: document.getElementById(\"password-log\"),\n};\nconst FORMS = {\n    accountNew: document.getElementById(\"create-account\"),\n    accountLogin: document.getElementById(\"log_in\"),\n};\nconst BUTTONS = {\n    newFormAccount: document.getElementById(\"btn-create-account\"),\n    login: document.getElementById(\"btn-log-in\"),\n    submitAccount: document.getElementById(\"sub-create-account\"),\n    submitLog: document.getElementById(\"submit-log\"),\n};\nconst ELEMENTS_DIVERS = {\n    eyeIconOpen: document.getElementById(\"eye-open\"),\n    eyeIconClose: document.getElementById(\"eye-close\"),\n    userNotHere: document.getElementsByClassName(\"error_mess\")[0],\n};\n\nexport {\n    FIELDS_ENTRY,\n    FORMS,\n    BUTTONS,\n    ELEMENTS_DIVERS\n}","import {\n  TESTS\n} from \"../../functions/test/test.js\";\nimport {\n  clearErrorNotif,\n  invalidInput\n} from \"../../error/invalid.js\";\nconst accountNew = {\n  result: true,\n  display: null,\n  inputs: [],\n  initResult: () => (accountNew.result = true),\n  initCheck: (inputs) => {\n    accountNew.inputs = inputs;\n    accountNew.isNameTaken();\n    return accountNew.result;\n  },\n  isNameTaken: () => {\n    accountNew.result = accountNew.inputs[0].nextElementSibling.length ?\n      true :\n      false;\n    if (accountNew.result) return true;\n    accountNew.initResult();\n    accountNew.anyEmptyField();\n  },\n  anyEmptyField: () => {\n    let inputFilled;\n    accountNew.inputs = accountNew.inputs.map((input) => {\n      inputFilled = TESTS.isFieldFilled(input.value);\n      if (!inputFilled) {\n        input.setAttribute(\"data-state\", \"invalid\");\n        accountNew.result = false;\n      }\n      return input;\n    });\n    if (!accountNew.result) return false;\n    accountNew.allRespectRegex();\n  },\n  allRespectRegex: () => {\n    let resultRegex;\n    let inputsMatchRegex = [];\n    inputsMatchRegex = accountNew.inputs.map((input) => {\n      resultRegex = TESTS.isEntryValid(input.value, input.name);\n      accountNew.display = resultRegex ?\n        clearErrorNotif(input) :\n        invalidInput(input, input.name);\n      return resultRegex;\n    });\n    // accountNew.inputs are now an array of Boolean after\n    accountNew.result = inputsMatchRegex.every((input) => input);\n    return accountNew.result;\n  },\n};\nexport {\n  accountNew\n};","import {\n    TESTS\n} from \"../../functions/test/test.js\";\nimport {\n    clearErrorNotif,\n    invalidInput\n} from \"../../error/invalid.js\";\n\nconst accountLogin = {\n    result: true,\n    inputs: [],\n    initResult: () => (accountLogin.result = true),\n    initCheck: (inputs) => {\n        accountLogin.inputs = inputs;\n        accountLogin.anyEmptyField();\n        return accountLogin.result;\n    },\n    anyEmptyField: () => {\n        accountLogin.initResult();\n        let inputFilled;\n        accountLogin.inputs = accountLogin.inputs.map((input) => {\n            inputFilled = TESTS.isFieldFilled(input.value);\n            if (!inputFilled) {\n                input.setAttribute(\"data-state\", \"invalid\");\n                accountLogin.result = false;\n            }\n            return input;\n        });\n        if (!accountLogin.result) return false;\n        accountLogin.allRespectRegex();\n    },\n    allRespectRegex: () => {\n        accountLogin.initResult();\n        let resultRegex;\n        let inputsMatchRegex = [];\n        inputsMatchRegex = accountLogin.inputs.map((input) => {\n            resultRegex = TESTS.isEntryValid(input.value, input.name);\n            return resultRegex;\n        });\n        // accountLogin.inputs are now an array of Boolean after\n        accountLogin.result = inputsMatchRegex.every((input) => input);\n\n        return accountLogin.result;\n    },\n};\n\nexport {\n    accountLogin\n};","import {\n  serverGet,\n  serverPost\n} from \"./functions/sql/requestServer.js\";\n\nimport {\n  TESTS,\n  TEST_NAME,\n  TEST_LOGIN\n} from \"./functions/test/test.js\";\n\nimport {\n  FIELDS_ENTRY,\n  FORMS,\n  BUTTONS,\n  ELEMENTS_DIVERS\n} from \"./localisation/home.js\"\n\nimport {\n  ERROR_MESSAGE,\n  throwErrorMessage,\n  clearErrorNotif,\n  invalidInput,\n} from \"./error/invalid.js\";\n\nimport {\n  accountNew\n} from \"./logic/forms/submitAccount.js\";\n\nimport {\n  accountLogin\n} from \"./logic/forms/submitLogin.js\";\n\n\n//FUNCTIONS\nlet arePasswordsViewed = (answer) => {\n  let getInputPassword = [...document.getElementsByClassName(\"password_view\")];\n  if (answer) {\n    getInputPassword.map((input) => {\n      input.setAttribute(\"type\", \"text\");\n      //I disable any further input as the type has changed. As on blur, the type will be considered as text (for the regex). I can encouter this issue by checking the name in the condition before I apply the regex match, but I want to keep it simple.\n      input.disabled = true;\n    });\n  } else {\n    getInputPassword.map((input) => {\n      input.setAttribute(\"type\", \"password\");\n      input.disabled = false;\n    });\n  }\n};\nconst isNameAvailable = async (field) => {\n  try {\n    let result = await TEST_NAME(field.value);\n    if (result) {\n      let errorMessageLocation = field.nextElementSibling;\n      field.setAttribute(\"data-state\", \"invalid\");\n      throwErrorMessage(ERROR_MESSAGE.alreadyTaken, errorMessageLocation);\n    } else {\n      field.setAttribute(\"data-state\", \"\");\n      clearErrorNotif(field);\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\nlet submitAccount = async (event) => {\n  try {\n    event.preventDefault();\n    let inputs = [...FORMS.accountNew.querySelectorAll(\"input\")];\n    inputs.pop();\n    let checksPassed = accountNew.initCheck(inputs);\n    if (checksPassed) return FORMS.accountNew.submit();\n  } catch (err) {\n    console.log(err);\n  }\n};\nconst submitLog = async (event) => {\n  try {\n    event.preventDefault();\n    let inputs = [...FORMS.accountLogin.querySelectorAll(\"input\")];\n    inputs.pop();\n    let checksPassed = accountLogin.initCheck(inputs);\n    if (!checksPassed) return (ELEMENTS_DIVERS.userNotHere.style.opacity = 1);\n    let data = {\n      name: inputs[0].value,\n      password: inputs[1].value,\n    };\n    let ifUserExists = await serverPost(\"/checkUser\", \"post\", data);\n    if (!ifUserExists) return (ELEMENTS_DIVERS.userNotHere.style.opacity = 1);\n    FORMS.accountLogin.submit();\n  } catch (err) {\n    console.log(err);\n  }\n};\nconst apparenceHTML = {\n  doWeHighLightLabel: (element, indice) => {\n    element.previousElementSibling.style.color = indice ? \"white\" : \"#c7c8c7\";\n  },\n  eyesSwitch: (id) => {\n    if (id == \"eye-close\") {\n      ELEMENTS_DIVERS.eyeIconOpen.style.display = \"flex\";\n      ELEMENTS_DIVERS.eyeIconClose.style.display = \"none\";\n      arePasswordsViewed(true);\n      return;\n    } else {\n      ELEMENTS_DIVERS.eyeIconClose.style.display = \"flex\";\n      ELEMENTS_DIVERS.eyeIconOpen.style.display = \"none\";\n      arePasswordsViewed(false);\n    }\n  },\n};\n//ADD EVENTS\nconst eventEntry = () => {\n  FORMS.accountNew.addEventListener(\n    \"blur\",\n    (event) => {\n      apparenceHTML.doWeHighLightLabel(event.target, false);\n    },\n    true\n  );\n  FORMS.accountNew.addEventListener(\n    \"focus\",\n    (event) => {\n      apparenceHTML.doWeHighLightLabel(event.target, true);\n    },\n    true\n  );\n  FORMS.accountLogin.addEventListener(\n    \"focus\",\n    (event) => {\n      apparenceHTML.doWeHighLightLabel(event.target, true);\n      document.getElementsByClassName(\"error_mess\")[0].style.opacity = 0;\n      clearErrorNotif(event.target);\n    },\n    true\n  );\n  FORMS.accountLogin.addEventListener(\n    \"blur\",\n    (event) => {\n      apparenceHTML.doWeHighLightLabel(event.target, false);\n    },\n    true\n  );\n  document\n    .querySelector(\"#name\")\n    .addEventListener(\"blur\", (event) => isNameAvailable(event.target));\n};\nconst eventHTML = () => {\n  ELEMENTS_DIVERS.eyeIconClose.addEventListener(\"click\", (event) =>\n    apparenceHTML.eyesSwitch(event.currentTarget.getAttribute(\"id\"))\n  );\n  ELEMENTS_DIVERS.eyeIconOpen.addEventListener(\"click\", (event) =>\n    apparenceHTML.eyesSwitch(event.currentTarget.getAttribute(\"id\"))\n  );\n};\nconst eventButton = () => {\n  BUTTONS.newFormAccount.addEventListener(\"click\", () => {\n    FORMS.accountLogin.classList.remove(\"active2\");\n    FORMS.accountNew.classList.add(\"active1\");\n  });\n  BUTTONS.login.addEventListener(\"click\", () => {\n    FORMS.accountNew.classList.remove(\"active1\");\n    FORMS.accountLogin.classList.add(\"active2\");\n  });\n  BUTTONS.submitAccount.addEventListener(\"click\", submitAccount);\n  BUTTONS.submitLog.addEventListener(\"click\", submitLog);\n};\n//SET UP\nwindow.onload = () => {\n  let loader = document.getElementById(\"loader_content\");\n  loader.classList.add(\"loader_hide\");\n};\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  eventEntry();\n  eventButton();\n  eventHTML();\n});"]}