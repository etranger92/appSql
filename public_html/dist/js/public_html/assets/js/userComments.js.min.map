{"version":3,"sources":["public_html/assets/js/node_modules/browser-pack/_prelude.js","public_html/assets/js/node_modules/@babel/runtime/helpers/asyncToGenerator.js","public_html/assets/js/userComments.js","public_html/assets/js/node_modules/@babel/runtime/helpers/interopRequireDefault.js","public_html/assets/js/node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime.js","public_html/assets/js/node_modules/@babel/runtime/regenerator/index.js","public_html/assets/js/public_html/assets/js/functions/sql/requestServer.js","public_html/assets/js/public_html/assets/js/functions/sql/sqlCommentCrud.js","public_html/assets/js/public_html/assets/js/localisation/account.js","public_html/assets/js/public_html/assets/js/logic/crudIcon.js","public_html/assets/js/public_html/assets/js/userComments.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","fn","self","this","args","arguments","apply","err","undefined","2","obj","__esModule","default","3","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","4","regenerator-runtime","5","_interopRequireDefault","defineProperty","serverPost","serverGet","_ref","_regenerator","_asyncToGenerator2","_callee","url","params","res","_context","axios","t0","console","log","_x","_x2","_x3","_ref2","_callee2","data","_context2","_x4","_x5","_x6","@babel/runtime/helpers/asyncToGenerator","@babel/runtime/helpers/interopRequireDefault","@babel/runtime/regenerator","6","sqlCommentUpdate","sqlCommentDelete","sqlCommentCreate","_requestServer","id","_ref3","_callee3","_context3","./requestServer.js","7","FIELDS_COMMENTS","commentOnSubmit","document","getElementById","inputComment","insertComment","notificationComment","8","whichIconCrud","_sqlCommentCrud","item","commentDelete","commentUpdate","commentElement","commentId","li","previousElementSibling","getAttribute","parentElement","parentNode","removeChild","newEvent","disabled","style","border","addEventListener","input","commentUpdateNext","../functions/sql/sqlCommentCrud.js","9","_account","_crudIcon","commentDisplay","comment","createLi","createElement","newComment","concat","innerHTML","appendChild","crudOperation","event","wichOperations","filter","element","target","classList","contains","commentAdd","commentValue","trim","dataset","textContent","./functions/sql/sqlCommentCrud.js","./localisation/account.js","./logic/crudIcon.js"],"mappings":"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","file":"userComments.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","import {\n  FIELDS_COMMENTS\n} from \"./localisation/account.js\";\nimport {\n  sqlCommentCreate,\n  sqlCommentDelete,\n  sqlCommentUpdate\n} from \"./functions/sql/sqlCommentCrud.js\";\nimport {\n  whichIconCrud\n} from \"./logic/crudIcon.js\"\n\nlet commentDisplay = (comment, id) => {\n  let createLi = document.createElement(\"li\");\n  let newComment = `<input data-id=${id} class=\"comment_retrieved\" type=\"text\" value=\"${comment}\" disabled>\n  <i class='fas fa-backspace icon_delete' style=\"align-self:center\" ></i><i style=\"margin-left:0.5rem;\" class=\"fa fa-align-left icon_modify\"> </i>`;\n  createLi.innerHTML = newComment;\n  FIELDS_COMMENTS.insertComment.appendChild(createLi);\n};\nlet crudOperation = async (event) => {\n  try {\n    let wichOperations = [\"icon_delete\", \"icon_modify\"];\n    wichOperations = wichOperations.filter(element => {\n      if (event.target.classList.contains(element)) return element\n    })\n    let result = await whichIconCrud(event.target, wichOperations[0]);\n    if (result) {\n      console.log(result)\n      //can display a notification to confirm\n    } else {\n      //Display an error \n      console.log(result)\n    }\n  } catch (err) {\n    console.log(err)\n  }\n};\nlet commentAdd = async () => {\n  //Could put this in logic\n  try {\n    let comment = FIELDS_COMMENTS.inputComment;\n    let commentValue = comment.value.trim();\n    if (!commentValue) return (comment.dataset.state = \"invalid\");\n    let commentId = await sqlCommentCreate(commentValue);\n    console.log(commentId, \"COMMENT ID\")\n    if (!commentId) return FIELDS_COMMENTS.notificationComment.textContent = \"An error happened etc.\"\n    commentDisplay(commentValue, commentId);\n    FIELDS_COMMENTS.notificationComment.textContent = \"Has been added\";\n    comment.value = \"\";\n  } catch (err) {\n    console.log(err)\n    FIELDS_COMMENTS.notificationComment.textContent = \"An error happened etc.\"\n  }\n};\nlet eventFieldsComments = () => {\n  FIELDS_COMMENTS.commentOnSubmit.addEventListener(\"click\", commentAdd);\n  FIELDS_COMMENTS.inputComment.addEventListener(\"focus\", () => {\n    FIELDS_COMMENTS.inputComment.dataset.state = \"\";\n    FIELDS_COMMENTS.notificationComment.textContent = \"\";\n  });\n  FIELDS_COMMENTS.insertComment.addEventListener(\"click\", crudOperation, true);\n};\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  eventFieldsComments();\n});","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = require(\"regenerator-runtime\");\n","let serverGet = async (url, method, params) => {\n    try {\n        let res = await axios({\n            method,\n            url,\n            params,\n        });\n        return res\n    } catch (err) {\n        console.log(err);\n    }\n};\nlet serverPost = async (url, method, data) => {\n    try {\n        let res = await axios({\n            method,\n            url,\n            data,\n        });\n        console.log(res.data)\n        return res.data\n    } catch (err) {\n        console.log(err);\n    }\n};\n\n\n\nexport {\n    serverGet,\n    serverPost\n};","import {\n    serverGet,\n    serverPost\n} from \"./requestServer.js\"\n\nlet sqlCommentCreate = async (value) => {\n\n    try {\n        let data = {\n            value\n        };\n        let result = await serverPost(\"/sqlCommentCreate\", \"post\", data);\n        return result;\n    } catch (err) {\n        console.log(\"COMMENT CREATE JS/REDIS :\", err)\n    }\n};\n\nlet sqlCommentDelete = async (id) => {\n    try {\n        let data = {\n            id\n        };\n        const result = await serverPost(\"/sqlCommentDelete\", \"post\", data);\n        return result\n    } catch (err) {\n        console.log(\"COMMENT DELETE JS/REDIS :\", err)\n        //Could send false to handle error\n    }\n}\n\nlet sqlCommentUpdate = async (value, id) => {\n    try {\n\n        let data = {\n            value,\n            id\n        };\n        const result = await serverPost(\"/sqlCommentUpdate\", \"post\", data);\n        return result;\n    } catch (err) {\n        console.log(\"COMMENT UPDATE JS/REDIS :\", err)\n    }\n\n\n}\n\n\nexport {\n    sqlCommentCreate,\n    sqlCommentDelete,\n    sqlCommentUpdate\n}","const FIELDS_COMMENTS = {\n    commentOnSubmit: document.getElementById(\"submit_comment\"),\n    inputComment: document.getElementById(\"new_comment\"),\n    insertComment: document.getElementById(\"contain-comments\"),\n    notificationComment: document.getElementById(\"notification-comment\"),\n\n};\n\nexport {\n    FIELDS_COMMENTS\n}","import {\n    sqlCommentCreate,\n    sqlCommentDelete,\n    sqlCommentUpdate\n} from \"../functions/sql/sqlCommentCrud.js\";\n\n\nconst whichIconCrud = (item, type) => {\n    switch (type) {\n        case \"icon_delete\":\n            return commentDelete(item);\n            break;\n        case \"icon_modify\":\n            return commentUpdate(item);\n            break;\n        default:\n            return;\n    }\n\n}\n\nconst commentDelete = async item => {\n    try {\n        let commentElement = item.previousElementSibling;\n        let commentId = commentElement.getAttribute(\"data-id\");\n        let isItDelete = await sqlCommentDelete(commentId);\n        if (!isItDelete) return false;\n        let li = commentElement.parentElement;\n        li.parentNode.removeChild(li)\n        return true;\n    } catch (err) {\n        console.log(err)\n    }\n};\n\nconst commentUpdate = async item => {\n    try {\n        let commentElement = item.previousElementSibling.previousElementSibling;\n        let commentId = commentElement.getAttribute(\"data-id\");\n        let isItDisabled = commentElement.disabled;\n        if (isItDisabled) {\n            commentElement.disabled = false;\n            commentElement.style.border = \"1px solid white\";\n        } else {\n            commentElement.disabled = true;\n            commentElement.style.border = \"none\";\n        };\n        let newEvent = await commentElement.addEventListener(\"blur\", () => {\n            let input = commentElement.value;\n            let result = commentUpdateNext(input, commentId);\n            return result;\n        })\n        return newEvent\n    } catch (err) {\n        console.log(err)\n    }\n};\n\nconst commentUpdateNext = async (input, commentId) => {\n    try {\n        let result = await sqlCommentUpdate(input, commentId);\n        return result\n\n    } catch (err) {\n        console.log(err)\n    }\n}\nexport {\n    whichIconCrud\n}","import {\n  FIELDS_COMMENTS\n} from \"./localisation/account.js\";\nimport {\n  sqlCommentCreate,\n  sqlCommentDelete,\n  sqlCommentUpdate\n} from \"./functions/sql/sqlCommentCrud.js\";\nimport {\n  whichIconCrud\n} from \"./logic/crudIcon.js\"\n\nlet commentDisplay = (comment, id) => {\n  let createLi = document.createElement(\"li\");\n  let newComment = `<input data-id=${id} class=\"comment_retrieved\" type=\"text\" value=\"${comment}\" disabled>\n  <i class='fas fa-backspace icon_delete' style=\"align-self:center\" ></i><i style=\"margin-left:0.5rem;\" class=\"fa fa-align-left icon_modify\"> </i>`;\n  createLi.innerHTML = newComment;\n  FIELDS_COMMENTS.insertComment.appendChild(createLi);\n};\nlet crudOperation = async (event) => {\n  try {\n    let wichOperations = [\"icon_delete\", \"icon_modify\"];\n    wichOperations = wichOperations.filter(element => {\n      if (event.target.classList.contains(element)) return element\n    })\n    let result = await whichIconCrud(event.target, wichOperations[0]);\n    if (result) {\n      console.log(result)\n      //can display a notification to confirm\n    } else {\n      //Display an error \n      console.log(result)\n    }\n  } catch (err) {\n    console.log(err)\n  }\n};\nlet commentAdd = async () => {\n  //Could put this in logic\n  try {\n    let comment = FIELDS_COMMENTS.inputComment;\n    let commentValue = comment.value.trim();\n    if (!commentValue) return (comment.dataset.state = \"invalid\");\n    let commentId = await sqlCommentCreate(commentValue);\n    console.log(commentId, \"COMMENT ID\")\n    if (!commentId) return FIELDS_COMMENTS.notificationComment.textContent = \"An error happened etc.\"\n    commentDisplay(commentValue, commentId);\n    FIELDS_COMMENTS.notificationComment.textContent = \"Has been added\";\n    comment.value = \"\";\n  } catch (err) {\n    console.log(err)\n    FIELDS_COMMENTS.notificationComment.textContent = \"An error happened etc.\"\n  }\n};\nlet eventFieldsComments = () => {\n  FIELDS_COMMENTS.commentOnSubmit.addEventListener(\"click\", commentAdd);\n  FIELDS_COMMENTS.inputComment.addEventListener(\"focus\", () => {\n    FIELDS_COMMENTS.inputComment.dataset.state = \"\";\n    FIELDS_COMMENTS.notificationComment.textContent = \"\";\n  });\n  FIELDS_COMMENTS.insertComment.addEventListener(\"click\", crudOperation, true);\n};\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  eventFieldsComments();\n});"]}